{"ast":null,"code":"import axios from 'axios';\n\n// Configuración base de Axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interfaces para los tipos de datos\n\n// Servicios API para Cursos\nexport const courseService = {\n  getAll: () => api.get('/courses/'),\n  getById: id => api.get(`/courses/${id}/`),\n  create: data => api.post('/courses/', data),\n  update: (id, data) => api.put(`/courses/${id}/`, data),\n  delete: id => api.delete(`/courses/${id}/`)\n};\n\n// Servicios API para Aulas\nexport const classroomService = {\n  getAll: () => api.get('/classrooms/'),\n  getById: id => api.get(`/classrooms/${id}/`),\n  create: data => api.post('/classrooms/', data),\n  update: (id, data) => api.put(`/classrooms/${id}/`, data),\n  delete: id => api.delete(`/classrooms/${id}/`)\n};\n\n// Servicios API para Profesores\nexport const teacherService = {\n  getAll: () => api.get('/teachers/'),\n  getById: id => api.get(`/teachers/${id}/`),\n  create: data => api.post('/teachers/', data),\n  update: (id, data) => api.put(`/teachers/${id}/`, data),\n  delete: id => api.delete(`/teachers/${id}/`)\n};\n\n// Servicios API para Bloques Horarios\nexport const timeSlotService = {\n  getAll: () => api.get('/timeslots/'),\n  getById: id => api.get(`/timeslots/${id}/`),\n  create: data => api.post('/timeslots/', data),\n  update: (id, data) => api.put(`/timeslots/${id}/`, data),\n  delete: id => api.delete(`/timeslots/${id}/`)\n};\n\n// Servicios API para Horarios\nexport const scheduleService = {\n  getAll: () => api.get('/schedules/'),\n  getById: id => api.get(`/schedules/${id}/`),\n  create: data => api.post('/schedules/', data),\n  update: (id, data) => api.put(`/schedules/${id}/`, data),\n  delete: id => api.delete(`/schedules/${id}/`),\n  activate: id => api.post(`/schedules/${id}/activate/`),\n  getActive: () => api.get('/schedules/active/')\n};\n\n// Servicios API para Asignaciones de Horario\nexport const assignmentService = {\n  getAll: () => api.get('/assignments/'),\n  getById: id => api.get(`/assignments/${id}/`),\n  create: data => api.post('/assignments/', data),\n  update: (id, data) => api.put(`/assignments/${id}/`, data),\n  delete: id => api.delete(`/assignments/${id}/`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","courseService","getAll","get","getById","id","data","post","update","put","delete","classroomService","teacherService","timeSlotService","scheduleService","activate","getActive","assignmentService"],"sources":["/home/leo/GeneracionDeHorarios/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Configuración base de Axios\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interfaces para los tipos de datos\nexport interface Course {\n  id?: number;\n  code: string;\n  name: string;\n  credits: number;\n  course_type: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface Classroom {\n  id?: number;\n  code: string;\n  name: string;\n  capacity: number;\n  building: string;\n  floor?: number;\n  classroom_type: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface Teacher {\n  id?: number;\n  code: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  department?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface TimeSlot {\n  id?: number;\n  day_of_week: string;\n  start_time: string;\n  end_time: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface ScheduleAssignment {\n  id?: number;\n  schedule?: number;\n  course: number | Course;\n  teacher: number | Teacher;\n  classroom: number | Classroom;\n  time_slot: number | TimeSlot;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport interface Schedule {\n  id?: number;\n  name: string;\n  semester: string;\n  year: number;\n  is_active: boolean;\n  fitness_score?: number;\n  assignments?: ScheduleAssignment[];\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Servicios API para Cursos\nexport const courseService = {\n  getAll: () => api.get<Course[]>('/courses/'),\n  getById: (id: number) => api.get<Course>(`/courses/${id}/`),\n  create: (data: Course) => api.post<Course>('/courses/', data),\n  update: (id: number, data: Course) => api.put<Course>(`/courses/${id}/`, data),\n  delete: (id: number) => api.delete(`/courses/${id}/`),\n};\n\n// Servicios API para Aulas\nexport const classroomService = {\n  getAll: () => api.get<Classroom[]>('/classrooms/'),\n  getById: (id: number) => api.get<Classroom>(`/classrooms/${id}/`),\n  create: (data: Classroom) => api.post<Classroom>('/classrooms/', data),\n  update: (id: number, data: Classroom) => api.put<Classroom>(`/classrooms/${id}/`, data),\n  delete: (id: number) => api.delete(`/classrooms/${id}/`),\n};\n\n// Servicios API para Profesores\nexport const teacherService = {\n  getAll: () => api.get<Teacher[]>('/teachers/'),\n  getById: (id: number) => api.get<Teacher>(`/teachers/${id}/`),\n  create: (data: Teacher) => api.post<Teacher>('/teachers/', data),\n  update: (id: number, data: Teacher) => api.put<Teacher>(`/teachers/${id}/`, data),\n  delete: (id: number) => api.delete(`/teachers/${id}/`),\n};\n\n// Servicios API para Bloques Horarios\nexport const timeSlotService = {\n  getAll: () => api.get<TimeSlot[]>('/timeslots/'),\n  getById: (id: number) => api.get<TimeSlot>(`/timeslots/${id}/`),\n  create: (data: TimeSlot) => api.post<TimeSlot>('/timeslots/', data),\n  update: (id: number, data: TimeSlot) => api.put<TimeSlot>(`/timeslots/${id}/`, data),\n  delete: (id: number) => api.delete(`/timeslots/${id}/`),\n};\n\n// Servicios API para Horarios\nexport const scheduleService = {\n  getAll: () => api.get<Schedule[]>('/schedules/'),\n  getById: (id: number) => api.get<Schedule>(`/schedules/${id}/`),\n  create: (data: Schedule) => api.post<Schedule>('/schedules/', data),\n  update: (id: number, data: Schedule) => api.put<Schedule>(`/schedules/${id}/`, data),\n  delete: (id: number) => api.delete(`/schedules/${id}/`),\n  activate: (id: number) => api.post(`/schedules/${id}/activate/`),\n  getActive: () => api.get<Schedule>('/schedules/active/'),\n};\n\n// Servicios API para Asignaciones de Horario\nexport const assignmentService = {\n  getAll: () => api.get<ScheduleAssignment[]>('/assignments/'),\n  getById: (id: number) => api.get<ScheduleAssignment>(`/assignments/${id}/`),\n  create: (data: ScheduleAssignment) => api.post<ScheduleAssignment>('/assignments/', data),\n  update: (id: number, data: ScheduleAssignment) => api.put<ScheduleAssignment>(`/assignments/${id}/`, data),\n  delete: (id: number) => api.delete(`/assignments/${id}/`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}