# Generated by Django 5.2.7 on 2025-10-06 18:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nombre")),
                ("capacity", models.IntegerField(verbose_name="Capacidad")),
                (
                    "building",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Edificio"
                    ),
                ),
                (
                    "floor",
                    models.CharField(blank=True, max_length=10, verbose_name="Piso"),
                ),
                (
                    "classroom_type",
                    models.CharField(
                        choices=[
                            ("lecture", "Aula Teórica"),
                            ("lab", "Laboratorio"),
                            ("workshop", "Taller"),
                            ("auditorium", "Auditorio"),
                        ],
                        default="lecture",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Aula",
                "verbose_name_plural": "Aulas",
                "ordering": ["building", "code"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Nombre")),
                ("credits", models.IntegerField(verbose_name="Créditos")),
                (
                    "course_type",
                    models.CharField(
                        choices=[
                            ("obligatory", "Obligatoria"),
                            ("elective", "Electiva"),
                        ],
                        default="obligatory",
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Curso",
                "verbose_name_plural": "Cursos",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Nombre")),
                ("semester", models.CharField(max_length=20, verbose_name="Semestre")),
                ("year", models.IntegerField(verbose_name="Año")),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Activo"),
                ),
                (
                    "fitness_score",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Puntuación de aptitud"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Horario",
                "verbose_name_plural": "Horarios",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="Nombres"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Apellidos"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Departamento"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Profesor",
                "verbose_name_plural": "Profesores",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("monday", "Lunes"),
                            ("tuesday", "Martes"),
                            ("wednesday", "Miércoles"),
                            ("thursday", "Jueves"),
                            ("friday", "Viernes"),
                            ("saturday", "Sábado"),
                        ],
                        max_length=10,
                        verbose_name="Día",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="Hora inicio")),
                ("end_time", models.TimeField(verbose_name="Hora fin")),
            ],
            options={
                "verbose_name": "Bloque Horario",
                "verbose_name_plural": "Bloques Horarios",
                "ordering": ["day_of_week", "start_time"],
                "unique_together": {("day_of_week", "start_time", "end_time")},
            },
        ),
        migrations.CreateModel(
            name="ScheduleAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "classroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schedules.classroom",
                        verbose_name="Aula",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schedules.course",
                        verbose_name="Curso",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="schedules.schedule",
                        verbose_name="Horario",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schedules.teacher",
                        verbose_name="Profesor",
                    ),
                ),
                (
                    "time_slot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schedules.timeslot",
                        verbose_name="Bloque Horario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asignación",
                "verbose_name_plural": "Asignaciones",
                "unique_together": {
                    ("schedule", "classroom", "time_slot"),
                    ("schedule", "teacher", "time_slot"),
                },
            },
        ),
    ]
